package util.optional;

public final class SomeOptional<T> extends Optional<T> {

    private final T t;

    SomeOptional(T t) {
        this.t = t;
    }

    @Override
    public boolean isNone() {
        return false;
    }

    @Override
    public T get() {
        return t;
    }

    /*
     * AUTOGENERATED STUFF
     *
     * Be sure to regenerate these (using Eclipse) if you change the number of fields in this class
     *
     * DEFINTIELY DONT CHANGE ANYTHING
     */

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((t == null) ? 0 : t.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!(obj instanceof SomeOptional)) {
            return false;
        }
        SomeOptional<?> other = (SomeOptional<?>) obj;
        if (t == null) {
            if (other.t != null) {
                return false;
            }
        }
        else if (!t.equals(other.t)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "SomeOptional [t=" + t + "]";
    }
}
